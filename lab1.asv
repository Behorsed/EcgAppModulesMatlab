clear all
close all
clc

load -ascii 100_V5.dat
syg = [X100_V5];
syg = syg(1:5000);
plot(syg) 

%% Filtracja dolnoprzepustowa
fc1 = 15;
fs = 360;

fc1 = fc1/(fs/2);

M = 25;
N = -M:M;

w = 0.54 - (0.46*cos((2*pi*(N+M))/(2*M)));

syg_po_filtracji = filtrdolno(syg, fc1, fs, N, M, w);
%syg_po_filtracji = syg;


%% Usuwanie izolinii

%% Butterworth
% n =4
% Fs = 500;
% Fn = Fs/2;
% Ws = 125/Fn
% [a,b] = butter(n, Ws, 'High');
% syg_butter = filter(a,b,syg_po_filtracji);
% figure
% plot(syg_po_filtracji)

fs=500; % sampling frequency 500 Hz
N=length(syg_po_filtracji); % data length
t = [0:N-1]/fs; % time array of the data
% IIR Butterworth highpass filter, cutoff 0.5 Hz
b = [0.995566972017647 -1.991133944035294 0.995566972017647];
a = [1 -1.991114292201654 0.991153595868935];
% Create filtered signal by ‘filter’ command
yf1 = filter(b,a,syg_po_filtracji);

% Filter online-implementation
yf(1)=b(1)*syg_po_filtracji(1);
yf(2)=-a(2)*yf(1)+b(1)*syg_po_filtracji(2)+b(2)*syg_po_filtracji(1);
for n=3:length(syg_po_filtracji);
yf(n)=-a(2)*yf(n-1)-a(3)*yf(n-2)+b(1)*syg_po_filtracji(n)+b(2)*syg_po_filtracji(n-1)+b(3)*syg_po_filtracji(n-2);
end
figure;
subplot(211);plot(t,syg_po_filtracji);
xlabel('Time(sec)'); ylabel('ECG(mV)'); title('Original')
subplot(212);plot(t,yf,t,yf1);
xlabel('Time(sec)'); ylabel('ECG(mV)'); title('Removing baseline wander Butterwortha') 



%% Czebyszewa
Fs = 300;                                               % Sampling Frequency (Hz)
Fn = Fs/2;                                              % Nyquist Frequency
Wp = [1  100]/Fn;                                       % Passband (Normalised)
Ws = [0.5  110]/Fn;                                     % Stopband (Normalised)
Rp = 10;                                                % Passband Ripple (dB)
Rs = 30;                                                % Stopband Ripple (dB)
[n,Ws] = cheb2ord(Wp, Ws, Rp, Rs);                      % Chebyshev Type II Order
[b,a] = cheby2(n, Rs, Ws);                              % Transfer Function Coefficients
%[sos,g] = tf2sos(b,a);                                  % SEcond-Order-Section For STability
syg_cheb = filtfilt(b,a, syg_po_filtracji);
figure 
subplot(211);plot(t,syg_po_filtracji);
xlabel('Time(sec)'); ylabel('ECG(mV)'); title('Original')
subplot(212);plot(t,syg_cheb);
xlabel('Time(sec)'); ylabel('ECG(mV)'); title('Removing baseline wander sr Chebyszewa');

%% Keiser
FreqS = 100;                                                   % Sampling frequency
fcuts = [0.5 1.0 45 46];                                        % Frequency Vector
mags =   [0 1 0];                                               % Magnitude (Defines Passbands & Stopbands)
devs = [0.05  0.01  0.05];                                      % Allowable Deviations
[n,Wn,beta,ftype] = kaiserord(fcuts,mags,devs,FreqS);
n = n + rem(n,2);
hh = fir1(n,Wn,ftype,kaiser(n+1,beta),'scale');
% figure 
% plot(hh)
syg_Keiser = conv(syg_po_filtracji, hh, 'same');
figure
subplot(211);plot(t,syg_po_filtracji);
xlabel('Time(sec)'); ylabel('ECG(mV)'); title('Original')
subplot(212);plot(t,syg_Keiser);
xlabel('Time(sec)'); ylabel('ECG(mV)'); title('Removing baseline wander Keiser');

%% LMS

%Srednia ruchoma sygna?u x
% N jest okresem usredniania, iloscia wspolczynnikow filtru
% x jest sygnalem analizowanym
% y jest wartoscia sredniej sygnalu x za okres N
q=0; % wartosc poczatkowa sumy q
M=length(syg_po_filtracji);
N = 5;
cirbuff=zeros(1,N); % bufor cykliczny
cirbuff_address=1; % adres bufora cyklicznego
for k=1:M
x_new =syg_po_filtracji(k); %(k+1) ze wzgledu na indeksowanie w Matlab
q = x_new + q - cirbuff(cirbuff_address);
if cirbuff_address < N
    cirbuff(cirbuff_address) = x_new;
    cirbuff_address=cirbuff_address+1;
end
if cirbuff_address >= N
    cirbuff_address = 1;
    cirbuff(cirbuff_address) = x_new;
end
y(k)=q/N;
end

figure 
subplot(211);plot(t,syg_po_filtracji);
xlabel('Time(sec)'); ylabel('ECG(mV)'); title('Original')
subplot(212);plot(t,y);
xlabel('Time(sec)'); ylabel('ECG(mV)'); title('Removing baseline wander moving average');




%inna metoda
% windowSize = 5; 
% b = (1/windowSize)*ones(1,windowSize);
% a = 1;
% y = filter(b,a,syg_po_filtracji);
% 
% figure
% plot(t,y)
% legend('Filtered Data')
